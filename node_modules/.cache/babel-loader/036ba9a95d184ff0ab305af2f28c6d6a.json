{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Promise2 = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/set-prototype-of\");\n\nvar _Object$getPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/get-prototype-of\");\n\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _set = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/set\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/createClass\"));\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise2); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar url_1 = require(\"url\");\n\nvar mitt_1 = __importDefault(require(\"../mitt\"));\n\nvar utils_1 = require(\"../utils\");\n\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}\n\nvar Router = /*#__PURE__*/function () {\n  function Router(pathname, query, as, _ref) {\n    var _this = this;\n\n    var initialProps = _ref.initialProps,\n        pageLoader = _ref.pageLoader,\n        App = _ref.App,\n        Component = _ref.Component,\n        err = _ref.err;\n    (0, _classCallCheck2.default)(this, Router);\n\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname = _this.pathname,\n            _query = _this.query;\n\n        _this.changeState('replaceState', utils_1.formatWithValidation({\n          pathname: _pathname,\n          query: _query\n        }), utils_1.getURL());\n\n        return;\n      } // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n\n      if (e.state.options && e.state.options.fromExternal) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (_this._bps && !_this._bps(e.state)) {\n        return;\n      }\n\n      var _e$state = e.state,\n          url = _e$state.url,\n          as = _e$state.as,\n          options = _e$state.options;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n\n      _this.replace(url, as, options);\n    }; // represents the current component key\n\n\n    this.route = toRoute(pathname); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    // @ts-ignore backwards compatibility\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = pathname;\n    this.query = query;\n    this.asPath = as;\n    this.subscriptions = new _set.default();\n    this.componentLoadCancel = null;\n\n    if (typeof window !== 'undefined') {\n      // in order for `e.state` to work on the `onpopstate` event\n      // we have to register the initial route upon initialization\n      this.changeState('replaceState', utils_1.formatWithValidation({\n        pathname: pathname,\n        query: query\n      }), as);\n      window.addEventListener('popstate', this.onPopState);\n      window.addEventListener('unload', function () {\n        // Workaround for popstate firing on initial page load when\n        // navigating back from an external site\n        if (history.state) {\n          var _history$state = history.state,\n              url = _history$state.url,\n              _as2 = _history$state.as,\n              options = _history$state.options;\n\n          _this.changeState('replaceState', url, _as2, (0, _assign.default)({}, options, {\n            fromExternal: true\n          }));\n        }\n      });\n    }\n  }\n\n  (0, _createClass2.default)(Router, [{\n    key: \"update\",\n    value: function update(route, Component) {\n      var data = this.components[route];\n\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n\n      var newData = (0, _assign.default)({}, data, {\n        Component: Component\n      });\n      this.components[route] = newData; // pages/_app.js updated\n\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(route) {\n      var _this2 = this;\n\n      return new _promise.default(function (resolve, reject) {\n        delete _this2.components[route];\n\n        _this2.pageLoader.clearCache(route);\n\n        if (route !== _this2.route) {\n          return resolve();\n        }\n\n        var pathname = _this2.pathname,\n            query = _this2.query;\n        var url = window.location.href; // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.\n\n        var as = window.location.pathname + window.location.search + window.location.hash;\n        Router.events.emit('routeChangeStart', url);\n\n        _this2.getRouteInfo(route, pathname, query, as).then(function (routeInfo) {\n          var error = routeInfo.error;\n\n          if (error && error.cancelled) {\n            return resolve();\n          }\n\n          _this2.notify(routeInfo);\n\n          if (error) {\n            Router.events.emit('routeChangeError', error, url);\n            return reject(error);\n          }\n\n          Router.events.emit('routeChangeComplete', url);\n        });\n      });\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function change(method, _url, _as, options) {\n      var _this3 = this;\n\n      return new _promise.default(function (resolve, reject) {\n        // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n        var url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n        var as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as; // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n          // @ts-ignore this is temporarily global (attached to window)\n          if (__NEXT_DATA__.nextExport) {\n            as = Router._rewriteUrlForNextExport(as);\n          }\n        }\n\n        _this3.abortComponentLoad(as); // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n\n\n        if (_this3.onlyAHashChange(as)) {\n          Router.events.emit('hashChangeStart', as);\n\n          _this3.changeState(method, url, as);\n\n          _this3.scrollToHash(as);\n\n          Router.events.emit('hashChangeComplete', as);\n          return true;\n        }\n\n        var _url_1$parse = url_1.parse(url, true),\n            pathname = _url_1$parse.pathname,\n            query = _url_1$parse.query; // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n\n\n        if (!_this3.urlIsNew(as)) {\n          method = 'replaceState';\n        } // @ts-ignore pathname is always a string\n\n\n        var route = toRoute(pathname);\n        var _options$shallow = options.shallow,\n            shallow = _options$shallow === void 0 ? false : _options$shallow;\n        Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result\n        // @ts-ignore pathname is always a string\n\n        _this3.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {\n          var error = routeInfo.error;\n\n          if (error && error.cancelled) {\n            return resolve(false);\n          }\n\n          Router.events.emit('beforeHistoryChange', as);\n\n          _this3.changeState(method, url, as, options);\n\n          var hash = window.location.hash.substring(1); // @ts-ignore pathname is always defined\n\n          _this3.set(route, pathname, query, as, (0, _assign.default)({}, routeInfo, {\n            hash: hash\n          }));\n\n          if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n          }\n\n          Router.events.emit('routeChangeComplete', as);\n          return resolve(true);\n        }, reject);\n      });\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        } // @ts-ignore method should always exist on history\n\n\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n\n      if (method !== 'pushState' || utils_1.getURL() !== as) {\n        // @ts-ignore method should always exist on history\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        }, null, as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function getRouteInfo(route, pathname, query, as) {\n      var _this4 = this;\n\n      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible\n      // If the route is already rendered on the screen.\n\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return _promise.default.resolve(cachedRouteInfo);\n      }\n\n      return new _promise.default(function (resolve, reject) {\n        if (cachedRouteInfo) {\n          return resolve(cachedRouteInfo);\n        }\n\n        _this4.fetchComponent(route).then(function (Component) {\n          return resolve({\n            Component: Component\n          });\n        }, reject);\n      }).then(function (routeInfo) {\n        var Component = routeInfo.Component;\n\n        if (process.env.NODE_ENV !== 'production') {\n          var _require = require('react-is'),\n              isValidElementType = _require.isValidElementType;\n\n          if (!isValidElementType(Component)) {\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n          }\n        }\n\n        return new _promise.default(function (resolve, reject) {\n          var ctx = {\n            pathname: pathname,\n            query: query,\n            asPath: as\n          };\n\n          _this4.getInitialProps(Component, ctx).then(function (props) {\n            routeInfo.props = props;\n            _this4.components[route] = routeInfo;\n            resolve(routeInfo);\n          }, reject);\n        });\n      }).catch(function (err) {\n        return new _promise.default(function (resolve) {\n          if (err.code === 'PAGE_LOAD_ERROR') {\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as; // Changing the URL doesn't block executing the current code path.\n            // So, we need to mark it as a cancelled error and stop the routing logic.\n\n            err.cancelled = true; // @ts-ignore TODO: fix the control flow here\n\n            return resolve({\n              error: err\n            });\n          }\n\n          if (err.cancelled) {\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n\n          resolve(_this4.fetchComponent('/_error').then(function (Component) {\n            var routeInfo = {\n              Component: Component,\n              err: err\n            };\n            var ctx = {\n              err: err,\n              pathname: pathname,\n              query: query\n            };\n            return new _promise.default(function (resolve) {\n              _this4.getInitialProps(Component, ctx).then(function (props) {\n                routeInfo.props = props;\n                routeInfo.error = err;\n                resolve(routeInfo);\n              }, function (gipErr) {\n                console.error('Error in error page `getInitialProps`: ', gipErr);\n                routeInfo.error = err;\n                routeInfo.props = {};\n                resolve(routeInfo);\n              });\n            });\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    }\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n\n      var _this$asPath$split = this.asPath.split('#'),\n          _this$asPath$split2 = (0, _slicedToArray2.default)(_this$asPath$split, 2),\n          oldUrlNoHash = _this$asPath$split2[0],\n          oldHash = _this$asPath$split2[1];\n\n      var _as$split = as.split('#'),\n          _as$split2 = (0, _slicedToArray2.default)(_as$split, 2),\n          newUrlNoHash = _as$split2[0],\n          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n\n\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n\n\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n\n\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n          _as$split4 = (0, _slicedToArray2.default)(_as$split3, 2),\n          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value\n\n\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n\n\n      var idEl = document.getElementById(hash);\n\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n\n\n      var nameEl = document.getElementsByName(hash)[0];\n\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(url) {\n      var _this5 = this;\n\n      return new _promise.default(function (resolve, reject) {\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (process.env.NODE_ENV !== 'production' || process.env.__NEXT_EXPERIMENTAL_DEBUG) return;\n\n        var _url_1$parse2 = url_1.parse(url),\n            pathname = _url_1$parse2.pathname; // @ts-ignore pathname is always defined\n\n\n        var route = toRoute(pathname);\n\n        _this5.pageLoader.prefetch(route).then(resolve, reject);\n      });\n    }\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(route) {\n        var cancelled, cancel, Component, error;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = this.componentLoadCancel = function () {\n                  cancelled = true;\n                };\n\n                _context.next = 4;\n                return this.pageLoader.loadPage(route);\n\n              case 4:\n                Component = _context.sent;\n\n                if (!cancelled) {\n                  _context.next = 9;\n                  break;\n                }\n\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n\n              case 9:\n                if (cancel === this.componentLoadCancel) {\n                  this.componentLoadCancel = null;\n                }\n\n                return _context.abrupt(\"return\", Component);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchComponent(_x) {\n        return _fetchComponent.apply(this, arguments);\n      }\n\n      return fetchComponent;\n    }()\n  }, {\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(Component, ctx) {\n        var cancelled, cancel, App, props, err;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = function cancel() {\n                  cancelled = true;\n                };\n\n                this.componentLoadCancel = cancel;\n                App = this.components['/_app'].Component;\n                _context2.next = 6;\n                return utils_1.loadGetInitialProps(App, {\n                  Component: Component,\n                  router: this,\n                  ctx: ctx\n                });\n\n              case 6:\n                props = _context2.sent;\n\n                if (cancel === this.componentLoadCancel) {\n                  this.componentLoadCancel = null;\n                }\n\n                if (!cancelled) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n\n              case 12:\n                return _context2.abrupt(\"return\", props);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getInitialProps(_x2, _x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.componentLoadCancel) {\n        Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);\n        this.componentLoadCancel();\n        this.componentLoadCancel = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      var App = this.components['/_app'].Component;\n      this.subscriptions.forEach(function (fn) {\n        return fn((0, _assign.default)({}, data, {\n          App: App\n        }));\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(fn) {\n      var _this6 = this;\n\n      this.subscriptions.add(fn);\n      return function () {\n        return _this6.subscriptions.delete(fn);\n      };\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      var _url$split = url.split('#'),\n          _url$split2 = (0, _slicedToArray2.default)(_url$split, 2),\n          pathname = _url$split2[0],\n          hash = _url$split2[1]; // tslint:disable-next-line\n\n\n      var _pathname$split = pathname.split('?'),\n          _pathname$split2 = (0, _slicedToArray2.default)(_pathname$split, 2),\n          path = _pathname$split2[0],\n          qs = _pathname$split2[1];\n\n      path = path.replace(/\\/$/, ''); // Append a trailing slash if this path does not have an extension\n\n      if (!/\\.[^/]+\\/?$/.test(path)) path += \"/\";\n      if (qs) path += '?' + qs;\n      if (hash) path += '#' + hash;\n      return path;\n    }\n  }]);\n  return Router;\n}();\n\nRouter.events = mitt_1.default();\nexports.default = Router;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","url_1","require","mitt_1","utils_1","toRoute","path","replace","Router","pathname","query","as","initialProps","pageLoader","App","Component","err","onPopState","e","state","changeState","formatWithValidation","getURL","options","fromExternal","_bps","url","process","env","NODE_ENV","console","warn","route","components","props","events","asPath","subscriptions","componentLoadCancel","window","addEventListener","history","data","Error","newData","notify","resolve","reject","clearCache","location","href","search","hash","emit","getRouteInfo","then","routeInfo","error","cancelled","back","change","method","_url","_as","__NEXT_EXPORT_TRAILING_SLASH","__NEXT_DATA__","nextExport","_rewriteUrlForNextExport","abortComponentLoad","onlyAHashChange","scrollToHash","parse","urlIsNew","shallow","substring","set","cachedRouteInfo","fetchComponent","isValidElementType","ctx","getInitialProps","catch","code","gipErr","cb","split","oldUrlNoHash","oldHash","newUrlNoHash","newHash","scrollTo","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","__NEXT_EXPERIMENTAL_DEBUG","prefetch","cancel","loadPage","loadGetInitialProps","router","forEach","fn","add","delete","qs","test","default"],"sources":["/Users/macbook/Desktop/cypress_test/cypress/node_modules/next-server/dist/lib/router/router.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, Component, err }) {\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state.options && e.state.options.fromExternal) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = { Component, props: initialProps, err };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        // @ts-ignore backwards compatibility\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.subscriptions = new Set();\n        this.componentLoadCancel = null;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n            window.addEventListener('unload', () => {\n                // Workaround for popstate firing on initial page load when\n                // navigating back from an external site\n                if (history.state) {\n                    const { url, as, options } = history.state;\n                    this.changeState('replaceState', url, as, Object.assign({}, options, { fromExternal: true }));\n                }\n            });\n        }\n    }\n    static _rewriteUrlForNextExport(url) {\n        const [pathname, hash] = url.split('#');\n        // tslint:disable-next-line\n        let [path, qs] = pathname.split('?');\n        path = path.replace(/\\/$/, '');\n        // Append a trailing slash if this path does not have an extension\n        if (!/\\.[^/]+\\/?$/.test(path))\n            path += `/`;\n        if (qs)\n            path += '?' + qs;\n        if (hash)\n            path += '#' + hash;\n        return path;\n    }\n    update(route, Component) {\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign({}, data, { Component });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload(route) {\n        return new Promise((resolve, reject) => {\n            delete this.components[route];\n            this.pageLoader.clearCache(route);\n            if (route !== this.route) {\n                return resolve();\n            }\n            const { pathname, query } = this;\n            const url = window.location.href;\n            // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.\n            const as = window.location.pathname + window.location.search + window.location.hash;\n            Router.events.emit('routeChangeStart', url);\n            this.getRouteInfo(route, pathname, query, as).then((routeInfo) => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve();\n                }\n                this.notify(routeInfo);\n                if (error) {\n                    Router.events.emit('routeChangeError', error, url);\n                    return reject(error);\n                }\n                Router.events.emit('routeChangeComplete', url);\n            });\n        });\n    }\n    back() {\n        window.history.back();\n    }\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = Router._rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            if (this.onlyAHashChange(as)) {\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, as);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return true;\n            }\n            const { pathname, query } = url_1.parse(url, true);\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            // @ts-ignore pathname is always a string\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            // @ts-ignore pathname is always a string\n            this.getRouteInfo(route, pathname, query, as, shallow).then((routeInfo) => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, as, options);\n                const hash = window.location.hash.substring(1);\n                // @ts-ignore pathname is always defined\n                this.set(route, pathname, query, as, Object.assign({}, routeInfo, { hash }));\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            // @ts-ignore method should always exist on history\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            // @ts-ignore method should always exist on history\n            window.history[method]({ url, as, options }, null, as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then((Component) => resolve({ Component }), reject);\n        }).then((routeInfo) => {\n            const { Component } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return new Promise((resolve, reject) => {\n                const ctx = { pathname, query, asPath: as };\n                this.getInitialProps(Component, ctx).then((props) => {\n                    routeInfo.props = props;\n                    this.components[route] = routeInfo;\n                    resolve(routeInfo);\n                }, reject);\n            });\n        }).catch((err) => {\n            return new Promise((resolve) => {\n                if (err.code === 'PAGE_LOAD_ERROR') {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error').then((Component) => {\n                    const routeInfo = { Component, err };\n                    const ctx = { err, pathname, query };\n                    return new Promise((resolve) => {\n                        this.getInitialProps(Component, ctx).then((props) => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, (gipErr) => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                }));\n            });\n        });\n    }\n    set(route, pathname, query, as, data) {\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && (oldUrlNoHash === newUrlNoHash) && (oldHash === newHash)) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    prefetch(url) {\n        return new Promise((resolve, reject) => {\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production' || process.env.__NEXT_EXPERIMENTAL_DEBUG)\n                return;\n            const { pathname } = url_1.parse(url);\n            // @ts-ignore pathname is always defined\n            const route = toRoute(pathname);\n            this.pageLoader.prefetch(route).then(resolve, reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = this.componentLoadCancel = () => {\n            cancelled = true;\n        };\n        const Component = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.componentLoadCancel) {\n            this.componentLoadCancel = null;\n        }\n        return Component;\n    }\n    async getInitialProps(Component, ctx) {\n        let cancelled = false;\n        const cancel = () => { cancelled = true; };\n        this.componentLoadCancel = cancel;\n        const { Component: App } = this.components['/_app'];\n        const props = await utils_1.loadGetInitialProps(App, { Component, router: this, ctx });\n        if (cancel === this.componentLoadCancel) {\n            this.componentLoadCancel = null;\n        }\n        if (cancelled) {\n            const err = new Error('Loading initial props cancelled');\n            err.cancelled = true;\n            throw err;\n        }\n        return props;\n    }\n    abortComponentLoad(as) {\n        if (this.componentLoadCancel) {\n            Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);\n            this.componentLoadCancel();\n            this.componentLoadCancel = null;\n        }\n    }\n    notify(data) {\n        const { Component: App } = this.components['/_app'];\n        this.subscriptions.forEach((fn) => fn(Object.assign({}, data, { App })));\n    }\n    subscribe(fn) {\n        this.subscriptions.add(fn);\n        return () => this.subscriptions.delete(fn);\n    }\n}\nRouter.events = mitt_1.default();\nexports.default = Router;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}